<?php

namespace App\Models;

use EloquentFilter\Filterable;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;

class DaftarProduk extends Model
{
    use HasFactory, Filterable;

    /**
     * The attributes that aren't mass assignable.
     *
     * @var array
     */
    public $guarded = ["id"];

    /**
     * The attributes that should be cast.
     *
     * @var array
     */
    protected $casts = [
        "tanggal_lahir" => "date",
    ];
    public function kategori()
    {
        return $this->hasOne(KategoriProduk::class,'id','id_kategori_produk');
    }
    public function gudang()
    {
        return $this->hasOne(GudangProduk::class,'id','id_gudang');
    }

    public function pesanan()
    {
        return $this->hasMany(PembelianPesanan::class, 'produk_id', 'id');
    }

    public function satuan()
    {
        return $this->belongsTo(SatuanProduk::class, 'id_satuan', 'id');
    }

    public function beratSatuan() {
        return $this->belongsTo(BeratSatuan::class, 'berat_satuan', 'id');
    }

    public function pesananbody()
    {
        return $this->hasOne(PembelianPesananBody::class, 'produk_id', 'id');
    }

    public function penerimaanbody()
    {
        return $this->hasOne(PembelianPenerimaanBody::class, 'produk_id', 'id');
    }
    public function kategoris()
    {
        return $this->hasOne(KategoriProduk::class,'id','id_kategori_produk');
    }


    public function pajakbeli()
    {
        return $this->hasOne(PerpajakanKeuangan::class,'id','pajak_pembelian');
    }
//    pajakjual
    public function pajakjual()
    {
        return $this->hasOne(PerpajakanKeuangan::class,'id','pajak_penjualan');
    }
    public function toArray()
    {
        $toArray = parent::toArray(); // TODO: Change the autogenerated stub
        $toArray['picture_path'] = $this->PicturePath;
        return $toArray;
    }
    public function getPicturePathAttribute()
    {
        $image = Storage::disk('public')->files('produk/'.$this->id);

        if (!empty($image[0]))
        return url('').'/storage/' . $image[0];

    }

}
